// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "Track.h"
#include "../Robotmap.h"
#include "../Commands/TrackIdleCommand.h"
Track::Track() : Subsystem("Track") {
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	quadratureEncoder1 = RobotMap::trackQuadratureEncoder1;
	analogForce1 = RobotMap::trackAnalogForce1;
	analogForce2 = RobotMap::trackAnalogForce2;
	brakeSolenoid = RobotMap::trackBrakeSolenoid;
	speedController1 = RobotMap::trackSpeedController1;
	speedController2 = RobotMap::trackSpeedController2;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}
    
void Track::InitDefaultCommand() {
	// Set the default command for a subsystem here.
	//SetDefaultCommand(new MySpecialCommand());
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	SetDefaultCommand(new TrackIdleCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}
// Put methods for controlling this subsystem
// here. Call these from Commands.
void Track::Drive(float speed)
{
	speedController1->Set(speed);
	speedController2->Set(speed);
}
void Track::TurnOffBreaks(bool value)
{
	brakeSolenoid->Set(value);
}
