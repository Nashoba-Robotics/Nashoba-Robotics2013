// RobotBuilder Version: 0.0.2
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in th future.
#include "DriveDriveCommand.h"
#define USE_BIG_STICK
DriveDriveCommand::DriveDriveCommand() : Command("Drive Drive Command")
{
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::drive);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
// Called just before this Command runs the first time
void DriveDriveCommand::Initialize() 
{
	lastExecuteTime = Timer::GetFPGATimestamp();
}
// Called repeatedly when this Command is scheduled to run
void DriveDriveCommand::Execute() 
{	
	double currentTime = Timer::GetFPGATimestamp();
	SmartDashboard::PutNumber("Delta Drive Invocation", currentTime - lastExecuteTime);
	lastExecuteTime = currentTime;
	
	if(Robot::oi->getPadRawAxis(Gamepad::kDPadXAxis)  > 0)
	{
		Robot::drive->driveMecanum(-0.2, 0, 0);
	}
	else if(Robot::oi->getPadRawAxis(Gamepad::kDPadXAxis) < 0)
	{
		Robot::drive->driveMecanum(0.2, 0, 0);
	}
	else
	{	
		/***********
		 * FIXME Some of the axes are reversed!
		 ***********/
		//SNAP X
		if(Robot::oi->getPadRawAxis(Gamepad::kLeftXAxis) < 0.08)
			snapx = 0;
		else
			snapx = Robot::oi->getPadRawAxis(Gamepad::kLeftXAxis);
		//SNAP Y
		if(Robot::oi->getPadRawAxis(Gamepad::kLeftYAxis) < 0.08)
			snapy = 0;
		else
			snapy = Robot::oi->getPadRawAxis(Gamepad::kLeftYAxis);
		//SNAP Z
		if(Robot::oi->getPadRawAxis(Gamepad::kRightXAxis) < 0.08)
			snapz = 0;
		else
			snapz = Robot::oi->getPadRawAxis(Gamepad::kRightXAxis);
		
		//Cut the rotation speed in half (because it is way too fast as it is)
		snapz /= 2;
		
		//Cut down all the speeds if the right bumper is being held (for fine alignment)
		if(Robot::oi->getPadButton(Gamepad::kRightBumper))
		{
			snapx /= 2;
			snapy /= 2;
			snapz /= 2;
		}
		
		Robot::drive->driveMecanum(snapx, snapy, snapz);
	}
}
// Make this return true when this Command no longer needs to run execute()
bool DriveDriveCommand::IsFinished() 
{
	return false;
}
// Called once after isFinished returns true
void DriveDriveCommand::End() {
	
}
// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void DriveDriveCommand::Interrupted() {
}
